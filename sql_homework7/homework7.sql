-- Задача 1: Вывести названия двух произвольных треков с тегом new

db.tracks.aggregate([
  { $match: { tags: 'new' } },
  { $sample: { size: 2 } },
  { $project: { _id: 0, title: 1 } }
])

-- Задача 2: Вывести имя юзера с самым минимальным балансом

db.users.aggregate([
  { $sort: { balance: 1 } },
  { $limit: 1 },
  { $project: { _id: 0, fullname: 1 } }
])

-- Задача 3: Вывести имена юзеров, у которых есть треки

db.users.aggregate([
  {
    $lookup: {
      from: 'tracks',
      localField: '_id',
      foreignField: 'author_id',
      as: 'tracks'
    }
  },
  { $match: { tracks: { $ne: [] } } },
  { $project: { _id: 0, fullname: 1 } }
])

-- Задача 4: Используя метод aggregate(), вывести ко-во юзеров с балансом до 1000 EUR

db.users.aggregate([
  { $match: { balance: { $lte: 1000 } } },
  { $group: { _id: 0, count: { $sum: 1 } } },
  { $project: { _id: 0, count: 1 } }
])

-- Задача 5: Также очень коротко опишите, как работает агрегация в MongoDB

-- Агрегация — это группировка значений многих документов.
-- Операции агрегирования позволяют манипулировать такими сгруппированными данными например проводить подсчет по полям.
-- Работа агрегации происходит путём обработки документов в коллекции в несколько этапов.
-- Каждый из этапов выполняет определённую операцию с данными, фильтруя их для получения нужного результата. 
-- Эти этапы определяются конвейером агрегации (pipeline)
-- 

